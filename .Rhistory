print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df,na.action = na.pass)
for(e in col(df)){
coalesce(e,x)
}
for(e in col(df)){
print(e)
# coalesce(e,x)
}
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df,na.action = na.pass)
for(e in names(df)){
print(e)
# coalesce(e,x)
}
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df,na.action = na.pass)
for(e in names(df)){
print(e)
# coalesce(e,x)
}
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df,na.action = na.pass)
for(e in names(df)){
print(e)
# coalesce(e,x)
}
coalesce(df,x)
df <- coalesce(df,x)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
x <- predict(model, df)
df <- coalesce(df,x)
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(model, df)
for(i in 1:ncol(df)){
df[,i] <- fcoalesce(df[,i],x[,i])
}
any(is.na(x))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
pre_model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(pre_model, df)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
any(is.na(x))
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(x[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
x <- predict(pre_model, df, na.remove=FALSE)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
any(is.na(x))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
pre_model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(pre_model, df, na.remove=FALSE)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
any(is.na(x))
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
pre_model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean)
x <- predict(pre_model.method, df, na.remove=FALSE)
print(pre_model)
pre_model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean,
na.remove = FALSE)
print(pre_model)
x <- predict(pre_model, df, na.remove=FALSE)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
any(is.na(x))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
glimpse(df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(ggmap)
library(fastDummies)
library(dbplyr)
library(corrplot)
library(caret)
library(RANN)
#read csv file into dataframe
url <- "https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD"
df <- read_csv(url)
print(head(df))
str(df)
#add column OCCUR_DATETIME
df$OCCUR_DATETIME <- mdy_hms(paste(df$OCCUR_DATE, df$OCCUR_TIME))
df <- df %>% relocate(OCCUR_DATETIME, .after = OCCUR_TIME)
#Fix data types
df$INCIDENT_KEY <- as.integer(df$INCIDENT_KEY)
df$OCCUR_DATE <- mdy(df$OCCUR_DATE)
df$OCCUR_TIME <- hms(df$OCCUR_TIME)
df$PRECINCT <- as.integer(df$PRECINCT)
df$JURISDICTION_CODE <- as.integer(df$JURISDICTION_CODE)
df$STATISTICAL_MURDER_FLAG <- as.integer(df$STATISTICAL_MURDER_FLAG)
head(df)
#count null values in each column
for(i in colnames(df))
{
print(paste("nulls in ", i,"=", sum(is.na(df[[i]])),",", round(100*sum(is.na(df[[i]]))/nrow(df)), "%"))
}
#remove columns with null values
df <- df[,colSums(is.na(df))==0]
df <- subset(df, select=-c(INCIDENT_KEY, X_COORD_CD, Y_COORD_CD, Lon_Lat, PRECINCT))
exclude = c("OCCUR_DATE", "OCCUR_TIME", "OCCUR_DATETIME", "Latitude", "Longitude")
for(i in colnames(df[, !names(df) %in% exclude])){
print(unique(df[,i]))
}
check_nonstandard_null <- function(){
print(paste("Num of UNKNOWN in VIC_AGE_GROUP:",sum(df$VIC_AGE_GROUP == "UNKNOWN")))
print(paste("Num of UNKNOWN in VIC_RACE:",sum(df$VIC_RACE == "UNKNOWN")))
print(paste("Num of U in VIC_SEX:",sum(df$VIC_SEX == "U")))
}
check_nonstandard_null()
replace_value <- function(fdf, coln, orig, repl){
for(i in 1:nrow(fdf)){
if(fdf[i, coln] == orig){
fdf[i, coln] <- repl
}
}
return(fdf)
}
df <- replace_value(df,"VIC_AGE_GROUP", "UNKNOWN", NA)
df <- replace_value(df,"VIC_RACE", "UNKNOWN", NA)
df <- replace_value(df,"VIC_SEX", "U", NA)
check_nonstandard_null()
glimpse(df)
names <- c("VIC_AGE_GROUP","VIC_RACE","VIC_SEX","BORO")
df[,names] <- lapply(df[,names] , factor)
glimpse(df)
pre_model <- preProcess(as.data.frame(df),
method = c("knnImpute"),
k = 20,
knnSummary = mean,
na.remove = FALSE)
print(pre_model)
x <- predict(pre_model, df, na.remove=FALSE)
for(i in 1:ncol(df)){
df[,i] <- coalesce(df[,i],x[,i])
}
any(is.na(x))
